plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'io.github.vincemann'
version = '1.1.0'

application {
    mainClassName = 'io.github.vincemann.subtitlebuddy.Main'
}

ext {
    javafxVersion = '17.0.1'
    // Default to linux platform if not provided [linux, mac, win]
    targetPlatform = project.hasProperty('targetPlatform') ? project.targetPlatform : 'linux'
}

shadowJar {
    doFirst {
        archiveClassifier.set('')
        archiveFileName = "SubtitleBuddy-${version}-${targetPlatform}.jar"
    }
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'io.github.vincemann.subtitlebuddy.Main'
    }
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'io.github.vincemann.subtitlebuddy.Main'
        )
    }
}

test {
    // this is here so i can pass in cli argument, in order to run tests in headless mode 
    systemProperty 'headless', System.getProperty('headless')

    doFirst {
        jvmArgs = [
                '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                '--add-opens', 'javafx.graphics/com.sun.javafx.application=ALL-UNNAMED'
        ]
    }
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
    platform = targetPlatform
}


sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {

//    // Select JavaFX dependency based on target platform
//    implementation "org.openjfx:javafx-controls:$javafxVersion:$targetPlatform"
//    implementation "org.openjfx:javafx-fxml:$javafxVersion:$targetPlatform"

    // DI
    implementation group: 'com.google.inject', name: 'guice', version: '5.0.1'
    implementation group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '5.0.1'
    implementation group: 'com.google.inject.extensions', name: 'guice-multibindings', version: '4.2.3'


    // lombok
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    // validation
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    // event handling
    implementation group: 'com.google.guava', name: 'guava', version: '33.0.0-jre'

    // testfx
    testImplementation group: 'org.testfx', name: 'testfx-core', version: '4.0.18'
    testImplementation group: 'org.testfx', name: 'testfx-junit', version: '4.0.18'
    testImplementation group: 'org.loadui', name: 'testFx', version: '3.1.2'
    testImplementation "junit:junit:4.13-beta-3"

    // utils
    implementation group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.springframework', name: 'spring-core', version: '5.3.14'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    // jnative hook
    implementation group: 'com.1stleg', name: 'jnativehook', version: '2.0.2'
}
